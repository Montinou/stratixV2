---
name: Core Entity Query Migration
status: open
created: 2025-09-24T04:35:03Z
updated: 2025-09-24T04:35:03Z
github: [Will be updated when synced to GitHub]
depends_on: [001]
parallel: false
conflicts_with: []
---

# Task 002: Core Entity Query Migration

## Overview
Migrate existing raw SQL queries in lib/database/services.ts to use Drizzle ORM, implementing a clean repository pattern while maintaining full API compatibility.

## Requirements

### Query Migration
- Replace all raw SQL queries in lib/database/services.ts with Drizzle queries
- Migrate profiles queries (CRUD operations)
- Migrate objectives queries (with relations to initiatives)
- Migrate initiatives queries (with activity tracking)
- Migrate activities queries (with proper filtering)

### Repository Pattern Implementation
- Create lib/database/queries/ directory structure
- Implement ProfilesRepository with all profile operations
- Implement ObjectivesRepository with relational queries
- Implement InitiativesRepository with activity connections
- Implement ActivitiesRepository with filtering capabilities

### API Compatibility
- Ensure all existing API endpoints continue to work unchanged
- Maintain exact return data structures
- Preserve error handling patterns
- Keep performance characteristics equivalent or better

### Type Safety Enhancement
- Leverage Drizzle's type inference for query results
- Eliminate manual type casting from raw SQL
- Ensure compile-time validation of database operations
- Maintain strong typing throughout the data layer

## Acceptance Criteria
- [ ] All raw SQL queries replaced with Drizzle queries
- [ ] Repository pattern properly implemented
- [ ] Full API compatibility maintained
- [ ] Type safety improved with compile-time validation
- [ ] Performance equivalent or better than raw SQL
- [ ] Error handling preserved and enhanced
- [ ] All existing tests continue to pass

## Files to Modify/Create
- lib/database/queries/profiles.ts
- lib/database/queries/objectives.ts
- lib/database/queries/initiatives.ts
- lib/database/queries/activities.ts
- lib/database/services.ts (refactor to use repositories)
- lib/database/index.ts (export repositories)

## Notes
- Depends on Task 001 (schema and client setup)
- Must maintain backward compatibility during migration
- Focus on type safety improvements while preserving functionality
- Repository pattern should be clean and testable